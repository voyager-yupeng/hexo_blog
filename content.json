{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/11/18/hello-world/"},{"title":"搭建hexo博客","text":"安装node.jsMac可以在node.j官网下载安装包或源码。https://nodejs.org/zh-cn/download/Ubuntu可以直接用命令安装。 1apt install nodejs npm 相当于可以理解为找一个$\\widetilde{\\mathcal{G}}_t$，使得从${\\mathcal{G}}_t$到$\\widetilde{\\mathcal{G}}_t$的过程中，最小化最大移动距离，表示为下式。 $$(\\mathbf{P} 1): \\min _{\\widetilde{\\mathbf{x}}_t} J_s=\\max _{i \\in \\mathcal{I}_t} v_0 \\phi[i]=\\max _{i \\in \\mathcal{I}_t}\\left\\|\\widetilde{\\mathbf{p}}_{i, t}-\\mathbf{p}_{i, t}\\right\\|_2$$ $$s.t. \\widetilde{\\mathcal{G}}_t=\\left{\\mathcal{R}_t, \\widetilde{\\mathcal{E}}_t, \\widetilde{\\mathbf{X}}_t\\right}\\ forms \\ a \\ \\mathrm{CCN}\\ under \\ CLEC$$ 再研究了在general UEDs的干扰下的SCC问题。这种情况下，RUAVS只能从邻居中获得局部观测信息，并且在healing过程中动态在线的调整飞行方向。$J_c$：是形容healing快慢的指标。公式表示从1到T的时隙中，若$C_t$=1，即若RUAV里只有一个子群，即healing已经完成，则+1。求和完之后再求平均。相当于分子是healing完成的时隙个数，分母是总时隙个数，$J_c$就是一个比值。 安装hexo在hexo官网阅读文档进行安装。https://hexo.io/docs/ 安装hexo 1$ npm install -g hexo-cli 安装Hexo后，运行以下命令在目标 &lt;folder&gt;中初始化Hexo。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 完成后文件夹内的结构会变成这样： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 配置Githubhttps://hexo.io/docs/one-command-deployment安装hexo-deployer-git插件 1$ npm install hexo-deployer-git --save 在文件夹内的_config.yml文件内进行参数设置 12345deploy: type: git repo: &lt;repository url&gt; # https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io branch: [branch] message: [message] 安装主题Icarus1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 首次配置完会出现如下错误，按照绿色的提示安装所需要的包。 _config.yml设置冒号后面记得加空格1url: &lt;your url&gt; # Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project' 配置icarus主题修改侧边栏和正文栏的大小https://github.com/ppoffice/hexo-theme-icarus/issues/696https://carol-yang09.github.io/2020/11/22/hexo-icarus-themes-content-width/ vscode server注册百度云BCC云服务器用自带的VNC打开 下载vscode server用vscode server官网的方法不能下载，因为云服务器不能访问一些网站（404），所以需要手动下载后用scp上传上去。上传的时候需要注意百度云服务器的用户名默认就是root，而不是你的实例号。 1234scp &lt;本地文件地址&gt; root@&lt;公网地址&gt;:~sudo dpkg -i &lt;刚才下载好的文件&gt;sudo systemctl enable --now code-server@$USER# Now visit http://127.0.0.1:8080. Your password is in ~/.config/code-server/config.yaml 开启服务。 1./code-server --port 8080 --host 0.0.0.0 --auth password --cert ~/data/full_chain.pem --cert-key ~/data/private.key 8080是端口,可以自己修改,注意不要与其他应用冲突.0.0.0.0是代表可以被所有ip访问. 然后再浏览器内通过云服务器的公网ip和端口号就可以访问到code server了。 开启https但是markdown preview必须开启https才可以支持预览，所以还得注册一个域名。购买身份模板创建需要验证邮箱填完一系列个人信息后 启动https如果需要启用https服务的话则需要提供你域名的ssl认证证书路径。https设置需要你有一个已经认证过的域名并且本地保存了证书和key。在指令后面添加两个参数。 1234cert: 认证证书的路径（.pem或者.crt）cert-key: 证书key的路径（.key）code-server --port 8080 --auth password --cert ~/data/full_chain.pem --cert-key ~/data/private.key 接下来即可用https访问了：https://192.168.3.7:8082 选用Let’s Encrypt加密首页，https://letsencrypt.org/zh-cn/getting-started/安装Cerbot https://certbot.eff.org/instructions?ws=webproduct&amp;os=ubuntubionic nginx启动或者重启失败，报错nginx: [error] open() “/usr/local/var/run/nginx.pid” failed (2: No such file or directory)https://www.cnblogs.com/fancyLee/p/8931814.html nginx - nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)https://stackoverflow.com/questions/14972792/nginx-nginx-emerg-bind-to-80-failed-98-address-already-in-use 测试本地输入后多久会同步到code server","link":"/2022/03/08/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"},{"title":"移动硬盘购买","text":"闪迪E66的包装后背后有涂层，刮开后有一个二维码，扫描后会进入官方的防伪查询网页。值得注意的是如果是首次查询，他只会说查询成功，是正品。但如果是第二次查询，他就会提示说这已经不是第一次被人查询了，如果想知道第一次是什么时候被查询的，可以打电话咨询😂。","link":"/2022/02/01/%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98%E9%80%89%E8%B4%AD/"}],"tags":[{"name":"jQuery","slug":"jQuery","link":"/tags/jQuery/"},{"name":"表格","slug":"表格","link":"/tags/%E8%A1%A8%E6%A0%BC/"},{"name":"表单验证","slug":"表单验证","link":"/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"}],"categories":[{"name":"web前端","slug":"web前端","link":"/categories/web%E5%89%8D%E7%AB%AF/"}]}